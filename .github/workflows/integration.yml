name: 'integration'

on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  auth_json:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v2'

    - uses: 'actions/setup-node@v2'
      with:
        node-version: '12.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'

    - id: 'deploy'
      uses: './'
      with:
        name: 'auth-json-http-${{ github.run_number }}'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        source_dir: './tests/test-node-func/'

    # Auth as the main account for integration and cleanup
    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'

    - name: 'integration'
      env:
        URL: '${{ steps.deploy.outputs.url }}'
      run: 'npm run e2e-tests'

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'


  auth_workload_identity_federation:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'auth_workload_identity_federation'
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v2'

    - uses: 'actions/setup-node@v2'
      with:
        node-version: '12.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
        service_account: '${{ secrets.DEPLOY_CF_SA_EMAIL }}'

    - id: 'deploy'
      uses: './'
      with:
        name: 'auth-wif-http-${{ github.run_number }}'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        source_dir: './tests/test-node-func/'

    # Auth as the main account for integration and cleanup
    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'

    - name: 'integration'
      env:
        URL: '${{ steps.deploy.outputs.url }}'
      run: 'npm run e2e-tests'

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'

  # Deprecated
  auth_setup_gcloud:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'auth_setup_gcloud'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v2'

    - uses: 'actions/setup-node@v2'
      with:
        node-version: '12.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/setup-gcloud@master'
      with:
        service_account_email: '${{ secrets.DEPLOY_CF_SA_EMAIL }}'
        service_account_key: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'
        export_default_credentials: true

    - id: 'deploy'
      uses: ./
      with:
        name: 'auth-setup-gcloud-${{ github.run_number }}'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        source_dir: './tests/test-node-func/'

    # Auth as the main account for integration and cleanup
    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'

    - name: 'integration'
      env:
        URL: '${{ steps.deploy.outputs.url }}'
      run: 'npm run e2e-tests'

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'

  # Deprecated
  auth_builtin_credentials:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'auth_builtin_credentials'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v2'

    - uses: 'actions/setup-node@v2'
      with:
        node-version: '12.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - id: 'deploy'
      uses: './'
      with:
        credentials: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'
        name: 'auth-builtin-${{ github.run_number }}'
        region: 'us-east1'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        memory_mb: 512
        source_dir: './tests/test-node-func/'

    # Auth as the main account for integration and cleanup
    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'

    - name: 'integration'
      env:
        URL: '${{ steps.deploy.outputs.url }}'
      run: 'npm run e2e-tests'

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'

  event_trigger:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    name: 'event_trigger'
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v2'

    - uses: 'actions/setup-node@v2'
      with:
        node-version: '12.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
        service_account: '${{ secrets.DEPLOY_CF_SA_EMAIL }}'

    - id: 'deploy'
      uses: './'
      with:
        name: 'event-trigger-${{ github.run_number }}'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        source_dir: './tests/test-node-func/'
        event_trigger_type: 'providers/cloud.pubsub/eventTypes/topic.publish'
        event_trigger_resource: '${{ secrets.DEPLOY_CF_EVENT_PUBSUB_TOPIC }}'
        env_vars_file: './tests/env-var-files/test.good.yaml'
        build_environment_variables: 'FOO=bar, ZIP=zap'
        build_environment_variables_file: './tests/env-var-files/test.good.yaml'

    # Auth as the main account for integration and cleanup
    - uses: 'google-github-actions/auth@main'
      with:
        credentials_json: '${{ secrets.DEPLOY_CF_SA_KEY_JSON }}'

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'
