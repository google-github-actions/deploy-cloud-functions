name: 'Integration'

on:
  push:
    branches:
      - 'main'
      - 'release/**/*'
  pull_request:
    branches:
      - 'main'
      - 'release/**/*'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  https_trigger:
    timeout-minutes: 10
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'

      - uses: 'actions/setup-node@v4'
        with:
          node-version: '20.x'

      - name: 'npm build'
        run: 'npm ci && npm run build'

      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: '${{ vars.PROJECT_ID }}'
          workload_identity_provider: '${{ vars.WIF_PROVIDER_NAME }}'

      - id: 'deploy'
        uses: './'
        with:
          name: 'https-trigger-${{ github.run_number }}'
          runtime: 'nodejs22'
          entry_point: 'helloWorld'
          source_dir: './tests/test-node-func/'
          service_account: '${{ vars.SERVICE_ACCOUNT_EMAIL }}'

  event_trigger:
    timeout-minutes: 10
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'

      - uses: 'actions/setup-node@v4'
        with:
          node-version: '20.x'

      - name: 'npm build'
        run: 'npm ci && npm run build'

      - uses: 'google-github-actions/auth@v2'
        with:
          project_id: '${{ vars.PROJECT_ID }}'
          workload_identity_provider: '${{ vars.WIF_PROVIDER_NAME }}'

      - id: 'deploy'
        uses: './'
        with:
          name: 'event-trigger-${{ github.run_number }}'
          runtime: 'nodejs22'
          entry_point: 'helloWorld'
          source_dir: './tests/test-node-func/'
          event_trigger_type: 'google.cloud.audit.log.v1.written'
          event_trigger_filters: |-
            serviceName=storage.googleapis.com
            methodName=storage.objects.create
          event_trigger_retry: true
          event_trigger_service_account: '${{ vars.SERVICE_ACCOUNT_EMAIL }}'
          environment_variables: |-
            FOO=bar
            ZIP=zap
          build_environment_variables: |-
            FRUIT=apple
            MEAT=bacon
          secrets: |-
            SECRET_FOO=${{ vars.SECRET_VERSION_NAME }}
            SECRET_BAR=${{ vars.SECRET_NAME }}
            /etc/secrets/foo=${{ vars.SECRET_VERSION_NAME }}
          service_account: '${{ vars.SERVICE_ACCOUNT_EMAIL }}'
          min_instance_count: 2
          max_instance_count: 5
