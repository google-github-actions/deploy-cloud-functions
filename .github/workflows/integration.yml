name: 'Integration'

on:
  push:
    branches:
    - 'main'
  pull_request:
    branches:
    - 'main'
  workflow_dispatch:

concurrency:
  group: '${{ github.workflow }}-${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  https_trigger:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-node@v3'
      with:
        node-version: '16.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
        service_account: '${{ secrets.DEPLOY_CF_SA_EMAIL }}'

    - id: 'deploy'
      uses: './'
      with:
        name: 'https-trigger-${{ github.run_number }}'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        source_dir: './tests/test-node-func/'
        https_trigger_security_level: 'secure_always'

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'

  event_trigger:
    if: ${{ github.event_name == 'push' || github.repository == github.event.pull_request.head.repo.full_name && github.actor != 'dependabot[bot]' }}
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v3'

    - uses: 'actions/setup-node@v3'
      with:
        node-version: '16.x'

    - name: 'npm build'
      run: 'npm ci && npm run build'

    - uses: 'google-github-actions/auth@main'
      with:
        workload_identity_provider: '${{ secrets.WIF_PROVIDER_NAME }}'
        service_account: '${{ secrets.DEPLOY_CF_SA_EMAIL }}'

    - id: 'deploy'
      uses: './'
      with:
        name: 'event-trigger-${{ github.run_number }}'
        runtime: 'nodejs10'
        entry_point: 'helloWorld'
        source_dir: './tests/test-node-func/'
        event_trigger_type: 'providers/cloud.pubsub/eventTypes/topic.publish'
        event_trigger_resource: '${{ secrets.DEPLOY_CF_EVENT_PUBSUB_TOPIC }}'
        event_trigger_retry: true
        env_vars_file: './tests/env-var-files/test.good.yaml'
        build_environment_variables: 'FOO=bar, ZIP=zap'
        build_environment_variables_file: './tests/env-var-files/test.good.yaml'
        secret_environment_variables: |-
          FOO=${{ secrets.DEPLOY_CF_SECRET_VERSION_REF }}
          BAR=${{ secrets.DEPLOY_CF_SECRET_REF }}
        secret_volumes: '/etc/secrets/foo=${{ secrets.DEPLOY_CF_SECRET_VERSION_REF }}'
        min_instances: 2
        max_instances: 5
        timeout: 300

    - name: 'cleanup'
      if: ${{ always() }}
      env:
        CLEANUP_FUNCTION_NAME: '${{ steps.deploy.outputs.id }}'
      run: 'npm run cleanup'
